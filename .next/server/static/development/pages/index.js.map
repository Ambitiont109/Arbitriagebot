{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/index.js","webpack:///external \"antd/lib/affix\"","webpack:///external \"antd/lib/affix/style/css\"","webpack:///external \"antd/lib/button\"","webpack:///external \"antd/lib/button/style/css\"","webpack:///external \"antd/lib/col\"","webpack:///external \"antd/lib/col/style/css\"","webpack:///external \"antd/lib/divider\"","webpack:///external \"antd/lib/divider/style/css\"","webpack:///external \"antd/lib/icon\"","webpack:///external \"antd/lib/icon/style/css\"","webpack:///external \"antd/lib/menu\"","webpack:///external \"antd/lib/menu/style/css\"","webpack:///external \"antd/lib/message\"","webpack:///external \"antd/lib/message/style/css\"","webpack:///external \"antd/lib/popconfirm\"","webpack:///external \"antd/lib/popconfirm/style/css\"","webpack:///external \"antd/lib/row\"","webpack:///external \"antd/lib/row/style/css\"","webpack:///external \"antd/lib/select\"","webpack:///external \"antd/lib/select/style/css\"","webpack:///external \"react\"","webpack:///external \"react-minimal-pie-chart\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { Component } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { Select, Button, Menu, Icon, Divider, Popconfirm, Affix, message } from 'antd'\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport '../assets/css/style.css'\r\n\r\nconst Option = Select.Option;\r\nconst ButtonGroup = Button.Group;\r\n\r\nconst datacollection = {\r\n    BINANCE: [\r\n            'BTC/USDT', 'ETH/USDT', 'LTC/USDT', 'XRP/USDT', 'ETH/BTC', 'LTC/BTC', 'XRP/BTC', 'BTG/USDT', 'ETC/USDT', 'BCC/USDT', 'BTG/BTC', 'ETC/BTC', 'XEM/BTC', 'BCC/BTC', 'DASH/BTC'    \r\n        ],\r\n    BTCTURK: [\r\n            'BTC/TRY', 'BTC/USDT', 'ETH/TRY', 'LTC/TRY', 'XRP/TRY', 'USDT/TRY'\r\n        ],\r\n    KOINEKS: [\r\n            'BTC/TRY', 'BTC/USDT', 'ETH/TRY', 'LTC/TRY', 'XRP/TRY', 'USDT/TRY', 'DASH/TRY', 'XLM/TRY', 'BTG/TRY', 'ETC/TRY', 'XEM/TRY', 'DOGE/TRY', 'BCH/TRY'    \r\n        ]\r\n}\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        affixtop : 10,\r\n        menukey: 'exchange',\r\n        selectdisble: true,\r\n        // Initial Box\r\n        exchangeboxes: ['BINANCE'],\r\n        parities: ['BTC/USDT']\r\n    }\r\n    boxadd = () => {\r\n        message.success('A new box created.');\r\n        var T = this.state.exchangeboxes;\r\n        var P = this.state.parities;\r\n        var isNew = false;\r\n        for (let key of Object.keys(datacollection)) {\r\n            if (!this.state.exchangeboxes.includes(key)) {\r\n                T.push(key);                \r\n                P.push(datacollection[key][0]);\r\n                isNew = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!isNew) {\r\n            T.push('BINANCE');                \r\n            P.push(datacollection['BINANCE'][0]);\r\n        }\r\n        this.setState({\r\n            exchangeboxes: T,\r\n            parities: P\r\n        })\r\n    }\r\n    boxremove = (boxkey) => {        \r\n        let T = this.state.exchangeboxes;\r\n        if (T.length == 1) {\r\n            message.warning('Sorry. The last box cannot be removed.');\r\n            return;\r\n        }\r\n        T.splice(boxkey, 1);\r\n        let P = this.state.parities;\r\n        P.splice(boxkey, 1);\r\n        this.setState({\r\n            exchangeboxes: T\r\n        })\r\n        message.success('The selected box removed.');\r\n    }\r\n    exchangeChange = (boxkey, value) => {\r\n        let T = this.state.exchangeboxes;\r\n        T[boxkey] = value;\r\n        let P = this.state.parities;\r\n        P[boxkey] = datacollection[value][0];\r\n        this.setState({\r\n            exchangeboxes: T,\r\n            parities: P,\r\n            selectdisble: true\r\n        });\r\n        switch (value) {\r\n            case 'BINANCE':\r\n                fetch('/binance-depth/' + value.replace('/', ''))\r\n                    .then(res => res.json())\r\n                    .then(data => this.setState({\r\n                        [value + datacollection[value][0].replace('/', '_')]: data\r\n                    })\r\n                );\r\n                break;\r\n            case 'BTCTURK':\r\n                Promise.all([\r\n                    fetch('https://www.btcturk.com/api/orderbook?pairSymbol=' + datacollection[value][0].replace('/', '')),\r\n                    fetch('https://www.btcturk.com/api/trades?pairSymbol=' + datacollection[value][0].replace('/', '') + '&last=18')\r\n                ])\r\n                .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\r\n                .then(([data1, data2]) => this.setState({\r\n                    [value + datacollection[value][0].replace('/', '_')]: data1, \r\n                    [value + datacollection[value][0].replace('/', '_') + 'history']: data2\r\n                }));\r\n                break;\r\n            case 'KOINEKS':\r\n                fetch('https://cors.io/?https://koineks.com/ticker')\r\n                    .then(res => res.json())\r\n                    .then(data => this.setState({\r\n                        [value + datacollection[value][0].replace('/', '_')]: data\r\n                    })\r\n                );\r\n                break;\r\n        }\r\n    }\r\n    parityChange = (boxkey, value) => {\r\n        let P = this.state.parities;\r\n        P[boxkey] = value;\r\n        this.setState({\r\n            parities: P,\r\n            selectdisble: true\r\n        });\r\n        switch (this.state.exchangeboxes[boxkey]) {\r\n            case 'BINANCE':\r\n                fetch('/binance-depth/' + value.replace('/', ''))\r\n                    .then(res => res.json())\r\n                    .then(data => this.setState({\r\n                        [this.state.exchangeboxes[boxkey] + value.replace('/', '_')]: data\r\n                    })\r\n                );\r\n                break;\r\n            case 'BTCTURK':\r\n                Promise.all([\r\n                    fetch('https://www.btcturk.com/api/orderbook?pairSymbol=' + value.replace('/', '')),\r\n                    fetch('https://www.btcturk.com/api/trades?pairSymbol=' + value.replace('/', '') + '&last=18')\r\n                ])\r\n                .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\r\n                .then(([data1, data2]) => this.setState({\r\n                    [this.state.exchangeboxes[boxkey] + value.replace('/', '_')]: data1,\r\n                    [this.state.exchangeboxes[boxkey] + value.replace('/', '_') + 'history']: data2\r\n                }));\r\n                break;\r\n            case 'KOINEKS':\r\n                fetch('https://cors.io/?https://koineks.com/ticker')\r\n                    .then(res => res.json())\r\n                    .then(data => this.setState({\r\n                        [this.state.exchangeboxes[boxkey] + value.replace('/', '_')]: data\r\n                    })\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Promise.all([\r\n            fetch('/binance-depth/' + datacollection['BINANCE'][0].replace('/', '')),\r\n            fetch('https://www.btcturk.com/api/orderbook?pairSymbol=' + datacollection['BTCTURK'][0].replace('/', '')),\r\n            fetch('https://www.btcturk.com/api/trades?pairSymbol=' + datacollection['BTCTURK'][0].replace('/', '') + '&last=18'),\r\n            fetch('https://cors.io/?https://koineks.com/ticker') \r\n        ])\r\n        .then(([res1, res2, res3, res4]) => Promise.all([res1.json(), res2.json(), res3.json(), res4.json()]))\r\n        .then(([data1, data2, data3, data4]) => this.setState({\r\n            ['BINANCE' + datacollection['BINANCE'][0].replace('/', '_')]: data1, \r\n            ['BTCTURK' + datacollection['BTCTURK'][0].replace('/', '_')]: data2,\r\n            ['BTCTURK' + datacollection['BTCTURK'][0].replace('/', '_') + 'history']: data3,\r\n            ['KOINEKS' + datacollection['KOINEKS'][0].replace('/', '_')]: data4\r\n        }));\r\n    }\r\n    componentDidUpdate = () => {\r\n        if (this.state.selectdisble)\r\n            this.setState({\r\n                selectdisble: false\r\n            })\r\n    }\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////                PAGE RENDER                  ////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    \r\n    render() {        \r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////                COMPONENTS DEFINITION                  ////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n//  MENU BAR  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        const Menubar = () => (\r\n            <Affix offsetTop={this.state.affixtop}>\r\n                <Menu\r\n                    selectedKeys={[this.state.menukey]}\r\n                    mode=\"horizontal\"\r\n                    theme='dark'>\r\n                    <Menu.Item key=\"exchange\">\r\n                        <a href=\"/index\">\r\n                            <Icon type=\"appstore\" />Exchange{this.state.TEST}\r\n                        </a>\r\n                    </Menu.Item>                        \r\n                    <Menu.Item key=\"currency\">\r\n                        <a href=\"/currency\">\r\n                            <Icon type=\"property-safety\" />Currency\r\n                        </a>\r\n                    </Menu.Item>                        \r\n                    <Menu.Item key=\"parity\">\r\n                        <a href=\"/parity\">\r\n                            <Icon type=\"stock\" />Parity\r\n                        </a>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Affix>\r\n        )\r\n//  HEAD COMPONENT  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        const Headbar = props => (\r\n            <Row>\r\n                <Col span={24} style={{padding:3}}>\r\n                    <ButtonGroup>\r\n                        <Button icon=\"plus\" onClick={this.boxadd} disabled={this.state.selectdisble} />\r\n                        <Popconfirm placement=\"topLeft\" title='Are you sure to delete this box?' onConfirm={() => this.boxremove(props.boxkey)} okText=\"Yes\" cancelText=\"No\">\r\n                            <Button icon=\"minus\" disabled={this.state.selectdisble} />\r\n                        </Popconfirm>\r\n                    </ButtonGroup>\r\n                    <Select value={this.state.parities[props.boxkey]} style={{ width:120,float:'right' }} onChange={(e) => this.parityChange(props.boxkey, e)} disabled={this.state.selectdisble}>\r\n                        {datacollection[props.exchange].map(parity => <Option key={parity}>{parity}</Option>)}\r\n                    </Select>\r\n                    <Select value={this.state.exchangeboxes[props.boxkey]} style={{ width:120,float:'right',marginRight:3 }} onChange={(e) => this.exchangeChange(props.boxkey, e)} disabled={this.state.selectdisble}>\r\n                        {\r\n                            Object.keys(datacollection).map(exchange => (\r\n                                <Option value={exchange} key={exchange}>{exchange}</Option>        \r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        )\r\n//  CONTENT COMPONENT  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        const Contentbar = props => {\r\n            const EP = props.exchange + this.state.parities[props.boxkey].replace('/', '_');\r\n            if (this.state[EP]) {\r\n                if (props.exchange == 'BINANCE') {\r\n                    var Buydata = () =>\r\n                        (Object.keys(this.state[EP].depth.bids).slice(0, 18).map((item, i) => (\r\n                            <tr className='trrow' key={i}>\r\n                                <td>{ parseFloat(item).toFixed(2) }</td>\r\n                                <td>{ parseFloat(this.state[EP].depth.bids[item]).toFixed(4) }</td>\r\n                                <td>{ (parseFloat(item).toFixed(2) * parseFloat(this.state[EP].depth.bids[item]).toFixed(4)).toFixed(2) }</td>\r\n                            </tr>\r\n                        )))\r\n                    var Selldata = () =>\r\n                        (Object.keys(this.state[EP].depth.asks).slice(0, 18).map((item, i) => (\r\n                            <tr className='trrow' key={i}>\r\n                                <td>{ parseFloat(item).toFixed(2) }</td>\r\n                                <td>{ parseFloat(this.state[EP].depth.asks[item]).toFixed(4) }</td>\r\n                                <td>{ (parseFloat(item).toFixed(2) * parseFloat(this.state[EP].depth.asks[item]).toFixed(4)).toFixed(2) }</td>\r\n                            </tr>\r\n                        )))\r\n                    var Historydata = () =>\r\n                        (this.state[EP].history.map((item, i) => (\r\n                            <tr className='trrow' key={i}>\r\n                                <td>{ parseFloat(item.p).toFixed(2) }</td>\r\n                                <td>{ parseFloat(item.q).toFixed(4) }</td>\r\n                                <td>{ (new Date(item.T*1000)).getHours()+':'+(new Date(item.T*1000)).getMinutes()+':'+(new Date(item.T*1000)).getSeconds() }</td>\r\n                            </tr>                                                        \r\n                        )))\r\n                } else if (props.exchange == 'BTCTURK') {\r\n                    var Buydata = () => \r\n                        (this.state[EP].bids.slice(0, 18).map((item, i) => (\r\n                            <tr className='trrow' key={i}>\r\n                                <td>{ parseFloat(item[0]).toFixed(2) }</td>\r\n                                <td>{ parseFloat(item[1]).toFixed(4) }</td>\r\n                                <td>{ (parseFloat(item[0]).toFixed(2) * parseFloat(item[1]).toFixed(4)).toFixed(2) }</td>\r\n                            </tr>                                                        \r\n                        )))\r\n                    var Selldata = () => \r\n                        (this.state[EP].asks.slice(0, 18).map((item, i) => (\r\n                            <tr className='trrow' key={i}>\r\n                                <td>{ parseFloat(item[0]).toFixed(2) }</td>\r\n                                <td>{ parseFloat(item[1]).toFixed(4) }</td>\r\n                                <td>{ (parseFloat(item[0]).toFixed(2) * parseFloat(item[1]).toFixed(4)).toFixed(2) }</td>\r\n                            </tr>                                                        \r\n                        )))\r\n                    var Historydata = () =>\r\n                        (this.state[EP + 'history'].map((item, i) => (\r\n                            <tr className='trrow' key={i}>\r\n                                <td>{ parseFloat(item.price).toFixed(2) }</td>\r\n                                <td>{ parseFloat(item.amount).toFixed(4) }</td>\r\n                                <td>{ (new Date(item.date)).getHours()+':0'+(new Date(item.date)).getMinutes()+':0'+(new Date(item.date)).getSeconds() }</td>\r\n                            </tr>                                                        \r\n                        )))\r\n                } else if (props.exchange == 'KOINEKS') {\r\n                    let a = this.state.parities[props.boxkey];\r\n                    let b = a.split('/');\r\n                    let c = b[0];\r\n                    var Buydata = () =>\r\n                        <tr className='trrow'>\r\n                            <td>{ parseFloat(this.state[EP][c].bid).toFixed(2) }</td>\r\n                            <td>{ parseFloat(this.state[EP][c].change_amount).toFixed(4) }</td>\r\n                            <td>{ (parseFloat(this.state[EP][c].bid).toFixed(2)*parseFloat(this.state[EP][c].change_amount)).toFixed(2) }</td>\r\n                        </tr>\r\n                    var Selldata = () =>\r\n                        <tr className='trrow'>\r\n                            <td>{ parseFloat(this.state[EP][c].ask).toFixed(2) }</td>\r\n                            <td>{ parseFloat(this.state[EP][c].change_amount).toFixed(4) }</td>\r\n                            <td>{ (parseFloat(this.state[EP][c].ask).toFixed(2)*parseFloat(this.state[EP][c].change_amount)).toFixed(2) }</td>\r\n                        </tr>\r\n                var Historydata = () => <tr><td colSpan='3'><Icon type=\"loading-3-quarters\" style={{ fontSize:20,color:'#888' }} spin/></td></tr>;\r\n                }\r\n            } else {\r\n                var Buydata = () => <tr><td colSpan='3'><Icon type=\"loading-3-quarters\" style={{ fontSize:20,color:'#888' }} spin/></td></tr>;\r\n                var Selldata = Buydata;\r\n                var Historydata = Buydata;    \r\n            }\r\n            return (\r\n                <Row gutter={3} style={{padding:'0 3px'}}>\r\n                    <Col span={8}>\r\n                        <div style={{height:400,border:'solid #EEE 1px',textAlign:'center'}}>\r\n                            <div style={{padding:'4px 0',borderBottom:'solid #1890ff 1px',color:'#1890ff'}}>\r\n                                <Icon type=\"fork\" theme=\"outlined\" style={{marginRight:5}} />Buy Orders\r\n                            </div>\r\n                            <div style={{height:370,overflow:'auto'}}>\r\n                                <table cellPadding='0' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        <tr className='trrow head'><td>Price</td><td>Amout</td><td>Total</td></tr>\r\n                                        <Buydata />\r\n                                        <tr><td colSpan='3'></td></tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <div style={{height:400,border:'solid #EEE 1px',textAlign:'center'}}>\r\n                            <div style={{padding:'4px 0',borderBottom:'solid #1890ff 1px',color:'#1890ff'}}>\r\n                                <Icon type=\"fork\" theme=\"outlined\" style={{marginRight:5}} />Sell Orders\r\n                            </div>\r\n                            <div style={{height:370,overflow:'auto'}}>\r\n                                <table cellPadding='0' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        <tr className='trrow head'><td>Price</td><td>Amout</td><td>Total</td></tr>\r\n                                        <Selldata />\r\n                                        <tr><td colSpan='3'></td></tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <div style={{height:400,border:'solid #EEE 1px',textAlign:'center'}}>\r\n                            <div style={{padding:'4px 0',borderBottom:'solid #1890ff 1px',color:'#1890ff'}}>\r\n                                <Icon type=\"fork\" theme=\"outlined\" style={{marginRight:5}} />Order History\r\n                            </div>\r\n                            <div style={{height:370,overflow:'auto'}}>\r\n                                <table cellPadding='0' cellSpacing='0'>\r\n                                    <tbody>\r\n                                        <tr className='trrow head'><td>Price</td><td>Amout</td><td>Time</td></tr>\r\n                                        <Historydata />\r\n                                        <tr><td colSpan='3'></td></tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n//  BOTTOM COMPONENT  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        const Chartbar = props => (\r\n            <Row style={{padding:'20px 0'}}>\r\n                <Col span={7}>\r\n                    <PieChart style={{width:'60%',margin:'auto'}}\r\n                        data={[                                                                                                            \r\n                            { title: 'One', value: 15, color: '#5ca536' },\r\n                            { title: 'Three', value: 8, color: '#ff7202' },\r\n                    ]} />\r\n                </Col>\r\n                <Col span={11}>\r\n                    <ul style={{listStyle:'none',padding:'0'}}>\r\n                        <li style={{width:'60%',float:'left'}}>\r\n                            balance warning\r\n                        </li>\r\n                        <li style={{width:'40%',float:'left'}}>\r\n                            100$\r\n                        </li>\r\n                    </ul>\r\n                    <ul style={{listStyle:'none',padding:'10px 0 0 0'}}>\r\n                        <li style={{width:'60%',float:'left'}}>\r\n                            ratio warning %\r\n                        </li>\r\n                        <li style={{width:'40%',float:'left'}}>\r\n                            1.5\r\n                        </li>\r\n                    </ul>\r\n                    <ul style={{listStyle:'none',padding:'10px 0 0 0'}}>\r\n                        <li style={{width:'60%',float:'left'}}>\r\n                            save\r\n                        </li>\r\n                        <li style={{width:'40%',float:'left'}}>\r\n                            save\r\n                        </li>\r\n                    </ul>\r\n                    <ul style={{listStyle:'none',padding:'10px 0 20px 0'}}>\r\n                        <li style={{width:'60%',float:'left'}}>\r\n                            secret key\r\n                        </li>\r\n                        <li style={{width:'40%',float:'left'}}>\r\n                            22\r\n                        </li>\r\n                    </ul>\r\n                    <Divider style={{margin:0}} />\r\n                    <ul style={{listStyle:'none',padding:'5px 0 0 0'}}>\r\n                        <li style={{width:'50%',float:'left'}}>\r\n                            btc public key\r\n                        </li>\r\n                        <li style={{width:'50%',float:'left'}}>\r\n                            usd public key\r\n                        </li>\r\n                    </ul>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <PieChart style={{width:'55%',margin:'auto'}}\r\n                        data={[                                                                                                            \r\n                            { title: 'One', value: 8, color: '#006fc1' },\r\n                            { title: 'Three', value: 10, color: '#ffc103' },\r\n                    ]} />\r\n                </Col>\r\n            </Row>\r\n        )\r\n//  EXCHANGE BOX  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        const Exchangebox = props => (\r\n            <Col span={8} className=\"exchangebox\">\r\n                <div>\r\n                    <Headbar exchange={props.exchange} boxkey={props.boxkey} />\r\n                    <Contentbar exchange={props.exchange} boxkey={props.boxkey} />\r\n                    <Chartbar />\r\n                </div>\r\n            </Col>\r\n        )\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////                REURN VIEW                  ////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n        return (                \r\n            <div style={{padding:10}}>\r\n                <Row>\r\n                    <Menubar />\r\n                </Row>\r\n                <Row gutter={6} style={{paddingTop:5}}>\r\n                    {\r\n                        this.state.exchangeboxes.map((box, i) => (\r\n                            <Exchangebox key={i} exchange={box} boxkey={i}/>    \r\n                        ))\r\n                    }\r\n                </Row>                \r\n            </div>\r\n          )\r\n      }\r\n  }","module.exports = require(\"antd/lib/affix\");","module.exports = require(\"antd/lib/affix/style/css\");","module.exports = require(\"antd/lib/button\");","module.exports = require(\"antd/lib/button/style/css\");","module.exports = require(\"antd/lib/col\");","module.exports = require(\"antd/lib/col/style/css\");","module.exports = require(\"antd/lib/divider\");","module.exports = require(\"antd/lib/divider/style/css\");","module.exports = require(\"antd/lib/icon\");","module.exports = require(\"antd/lib/icon/style/css\");","module.exports = require(\"antd/lib/menu\");","module.exports = require(\"antd/lib/menu/style/css\");","module.exports = require(\"antd/lib/message\");","module.exports = require(\"antd/lib/message/style/css\");","module.exports = require(\"antd/lib/popconfirm\");","module.exports = require(\"antd/lib/popconfirm/style/css\");","module.exports = require(\"antd/lib/row\");","module.exports = require(\"antd/lib/row/style/css\");","module.exports = require(\"antd/lib/select\");","module.exports = require(\"antd/lib/select/style/css\");","module.exports = require(\"react\");","module.exports = require(\"react-minimal-pie-chart\");"],"mappingsxFA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAGA;AAPA;AACA;;;;;;;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AA3BA;AA6BA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AA3BA;AA6BA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AACA;AAAA;AACA;AAEA;AADA;AAGA;AACA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAlBA;AACA;AACA;AAuBA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAdA;AACA;AACA;AAqrDA;AACA;AACA;AA4DA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AADA;AAOA;;;;AAzaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}